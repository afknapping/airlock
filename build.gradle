plugins {
    id 'application'
    id 'java-library'
    id 'maven-publish'
}

group "xyz.yaseen"
version "1.0-SNAPSHOT"

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}


dependencies {
    implementation "com.squareup.okhttp3:okhttp:4.9.0"
    implementation "com.squareup.okhttp3:okhttp-sse:4.9.0"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:4.5.0"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.0"  // only needed for debugging http requests
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.github.franmontiel:PersistentCookieJar:v1.0.1'
    implementation 'com.google.code.gson:gson:2.8.6'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    testImplementation 'org.awaitility:awaitility:4.0.3'
}

test {
    useJUnitPlatform()
}


javadoc {
    source = sourceSets.main.allJava
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',
                'Implementation-Version': archiveVersion

//               'Main-Class': 'com.mkyong.DateUtils'// no main class b/c this is a library
    }
    archivesBaseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}


ext.javaMainClass = 'airlock.Main'

application {
    mainClassName = javaMainClass
}



/*
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }

    }
*/


